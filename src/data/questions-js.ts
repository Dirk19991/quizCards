import { Question } from './questions';

export const questionsJs: Question[] = [
  {
    'Цикл "for...of" используется для перебора значений итерируемого объекта, таких как массивы, строки, Map и Set. "for...in" используется для перебора свойств объекта':
      'В чем отличие for...in и for...of',
  },
  {
    'try {...} catch {...}, try {...} finally {...}, try {...} catch {...} finally {...}': `Какие есть три основные формы конструкции try?`,
  },
  {
    'он допускает отрицательную позицию. Если pos – отрицательное число, то отсчет ведется от конца строки.': `В чем преимущество метода str.at(pos)?`,
  },
  {
    'let promise = new Promise(function(resolve, reject) { }': `Как вызвать промис?`,
  },
  {
    '"pending" («ожидание»), потом меняется на "fulfilled" («выполнено успешно») при вызове resolve или на "rejected" («выполнено с ошибкой») при вызове reject.': `какие есть состояния у промиса? `,
  },
  {
    'вначале undefined, далее изменяется на value при вызове resolve(value) или на error при вызове reject(error).': `каким может быть свойство result у промиса?`,
  },
  {
    'Нет, они ожидают только один аргумент (или ни одного). Все дополнительные аргументы будут проигнорированы. ': `можно ли в resolve/reject промиса передать больше одного аргумента?`,
  },
  {
    'объект подобный промису (имеющий метод then). Можно написать самому или встретить в какой-то библиотеке. Все промисы - thenable, но не все thenable - промисы': `что такое thenable?`,
  },
  {
    'встроенный объект, используемый для обработки асинхронных операций. ': `что такое промис?`,
  },
  {
    'да. Первый аргумент метода .then – функция, которая выполняется, когда промис переходит в состояние «выполнен успешно», и получает результат. Второй аргумент .then – функция, которая выполняется, когда промис переходит в состояние «выполнен с ошибкой», и получает ошибку.': `можно ли в then передать два аргумента?`,
  },
  {
    'да. Первый аргумент метода .then – функция, которая выполняется, когда промис переходит в состояние «выполнен успешно», и получает результат. Второй аргумент .then – функция, которая выполняется, когда промис переходит в состояние «выполнен с ошибкой», и получает ошибку.': `можно ли в then передать два аргумента?`,
  },
  {
    'он выполняется синхронно после всех изменений в DOM, но перед тем, как браузер отрисует изменения.': `в чем главная особенность useLayoutEffect?`,
  },
  {
    'useLayoutEffect т.к. он выполняется перед отрисовки, а useEffect асинхронно после отрисовки. Пишут что могут быть исключения но конкретных примеров нати не удалось': `что быстрее выполнится, useLayoutEffect или useEffect`,
  },
];
